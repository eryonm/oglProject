#version 330 core
layout (location=0) in vec3 aPos;
layout (location=1) in vec3 aNorm;
layout (location=2) in vec2 aTexCoords;


out vec3 Normal;
out vec3 FragPos;
out vec2 TexCoords;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

/*struct surfMaterial {
    sampler2D mars_texture;    
};*/ 

//uniform surfMaterial material;

//out vec4 tex_amb;
//out vec4 tex_diff;
//out vec4 tex_spec;

uniform bool GroundTex;

void main()
{
	

	FragPos= vec3(model*vec4(aPos,1.0f));
	Normal = mat3(transpose(inverse(model))) * aNorm;
	TexCoords = aTexCoords;

	gl_Position = projection*view*vec4(FragPos,1.0f);

	    //tex_amb = vec4(texture(material.mars_texture,TexCoords).rgb,1.0f); 
	    //tex_diff = tex_amb;
            //tex_spec = tex_amb;
	


}